<?php

/**
 * @file
 * Implement a family member field.
 */

/**
 * Implements hook_field_info().
 */
function mic_familymember_field_info() {
  return array(
    'mic_familymember' => array(
      'label' => t('Family Member'),
      'description' => t('This field stores family member info.'),
      'settings' => array(),
      'instance_settings' => array(),
      'default_widget' => 'mic_familymember_standard',
      'default_formatter' => 'mic_familymember_default',
    ),
  );
}

/**
 * Implements hook_field_is_empty().
 */
function mic_familymember_field_is_empty($item, $field) {
  // Every familymember field must have at least a relationship value or it is considered
  // empty, even if it has name information.
  return empty($item['relationship']);
}

/**
 * Implements hook_field_widget_info()
 */
function mic_familymember_field_widget_info() {
  return array(
    'mic_familymember_standard' => array(
      'label' => t('Family member form'),
      'field types' => array('mic_familymember'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function mic_familymember_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  switch ($instance['widget']['type']) {
    case 'mic_familymember_standard':
      // Add the relationship, name, and instrument fields.
      $element['relationship'] = array(
        '#title' => t('Relationship'),
        '#type' => 'select',
        '#default_value' => isset($items[$delta]['relationship']) ? $items[$delta]['relationship'] : '',
        '#options' => _mic_familymember_relationship_options(),
        '#description' => t('The relationship of the family member.'),
      );
      $element['name'] = array(
        '#type' => 'textfield',
        '#title' => t('Name'),
        '#default_value' => isset($items[$delta]['name']) ? $items[$delta]['name'] : '',
        '#description' => t('The name of the family member.'),
      );
      $element['instrument'] = array(
        '#title' => t('Instrument'),
        '#type' => 'textfield',
        '#default_value' => isset($items[$delta]['instrument']) ? $items[$delta]['instrument'] : '',
        '#description' => t('The instrument the family member plays.'),
      );
      break;
  }

  return $element;
}

function _mic_familymember_relationship_options() {
  $relationships = array(
    'child' => 'Child',
    'parent' => 'Parent',
    'partner' => 'Partner',
    'spouse' => 'Spouse',
    'other' => 'Other',
  );

  return $relationships;
}

/**
 * Implements hook_field_formatter_info().
 */
function mic_familymember_field_formatter_info() {
  $formatters = array(
    'mic_familymember_default' => array(
      'label' => t('Default'),
      'field types' => array('mic_familymember'),
    ),
  );

  return $formatters;
}

/**
 * Implements hook_field_formatter_view().
 */
function mic_familymember_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];
  $settings += array(
    'entity_type' => $entity_type,
    'entity' => $entity,
  );

  switch($display['type']) {
    case 'mic_familymember_default':
      $element[] = array(
        '#theme' => 'mic_familymember_formatter',
        '#items' => $items,
        '#settings' => $settings,
      );
      break;
  }

  return $element;
}

/**
 * Implements hook_theme().
 */
function mic_familymember_theme() {
  return array(
    'mic_familymember_formatter' => array(
      'variables' => array(
        'items' => NULL,
        'settings' => array(),
      ),
    ),
  );
}

/**
 * Returns HTML for a family member.
 *
 * @param $variables
 *
 * @ingroup themeable
 */
function theme_mic_familymember_formatter($variables) {
  $items = $variables['items'];
  $settings = $variables['settings'];
  $output = '';

  foreach ($items as $delta => $item) {
    $familymember = array();
    $familymember[] = '<strong>Name:</strong> ' . $item['name'];
    $familymember[] = '<strong>Relationship:</strong> ' . $item['relationship'];
    $familymember[] = '<strong>Instrument:</strong> ' . $item['instrument'];

    $output .= '<p>' . implode('<br />', $familymember) . '</p>';
  }

  return '<div class="familymembers">' . $output . '</div>';
}